{
 "Resources": {
  "MyVpcF9F0CA6F": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/Resource"
   }
  },
  "MyVpcPublicSubnet1SubnetF6608456": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet1/Subnet"
   }
  },
  "MyVpcPublicSubnet1RouteTableC46AB2F4": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet1/RouteTable"
   }
  },
  "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet1SubnetF6608456"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "MyVpcPublicSubnet1DefaultRoute95FDF9EB": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    },
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
    }
   },
   "DependsOn": [
    "MyVpcVPCGW488ACE0D"
   ],
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet1/DefaultRoute"
   }
  },
  "MyVpcPublicSubnet1EIP096967CB": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet1/EIP"
   }
  },
  "MyVpcPublicSubnet1NATGatewayAD3400C1": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MyVpcPublicSubnet1EIP096967CB",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet1SubnetF6608456"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "MyVpcPublicSubnet1DefaultRoute95FDF9EB",
    "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB"
   ],
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet1/NATGateway"
   }
  },
  "MyVpcPublicSubnet2Subnet492B6BFB": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet2/Subnet"
   }
  },
  "MyVpcPublicSubnet2RouteTable1DF17386": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet2/RouteTable"
   }
  },
  "MyVpcPublicSubnet2RouteTableAssociation227DE78D": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "MyVpcPublicSubnet2DefaultRoute052936F6": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    },
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
    }
   },
   "DependsOn": [
    "MyVpcVPCGW488ACE0D"
   ],
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PublicSubnet2/DefaultRoute"
   }
  },
  "MyVpcPrivateSubnet1Subnet5057CF7E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet1/Subnet"
   }
  },
  "MyVpcPrivateSubnet1RouteTable8819E6E2": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet1/RouteTable"
   }
  },
  "MyVpcPrivateSubnet1RouteTableAssociation56D38C7E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
    },
    "SubnetId": {
     "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "MyVpcPrivateSubnet1DefaultRouteA8CDE2FA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyVpcPublicSubnet1NATGatewayAD3400C1"
    },
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "MyVpcPrivateSubnet2Subnet0040C983": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet2/Subnet"
   }
  },
  "MyVpcPrivateSubnet2RouteTableCEDCEECE": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet2/RouteTable"
   }
  },
  "MyVpcPrivateSubnet2RouteTableAssociation86A610DA": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
    },
    "SubnetId": {
     "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "MyVpcPrivateSubnet2DefaultRoute9CE96294": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyVpcPublicSubnet1NATGatewayAD3400C1"
    },
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "MyVpcIGW5C4A4F63": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodePipelineStack/QA/WebAppStack/MyVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/IGW"
   }
  },
  "MyVpcVPCGW488ACE0D": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    },
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyVpc/VPCGW"
   }
  },
  "EcsSecurityGroup44008BF1": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "CodePipelineStack/QA/WebAppStack/EcsSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/EcsSecurityGroup/Resource"
   }
  },
  "EcsSecurityGroupfromCodePipelineStackQAWebAppStackAlbSecurityGroup18C5928D8078D71E7A": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow traffic from ALB",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "EcsSecurityGroup44008BF1",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AlbSecurityGroup86A59E99",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/EcsSecurityGroup/from CodePipelineStackQAWebAppStackAlbSecurityGroup18C5928D:80"
   }
  },
  "EcsSecurityGroupfromCodePipelineStackQAWebAppStackAlbSecurityGroup18C5928D8501E6DFEC43": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 8501,
    "GroupId": {
     "Fn::GetAtt": [
      "EcsSecurityGroup44008BF1",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AlbSecurityGroup86A59E99",
      "GroupId"
     ]
    },
    "ToPort": 8501
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/EcsSecurityGroup/from CodePipelineStackQAWebAppStackAlbSecurityGroup18C5928D:8501"
   }
  },
  "AlbSecurityGroup86A59E99": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "CodePipelineStack/QA/WebAppStack/AlbSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/AlbSecurityGroup/Resource"
   }
  },
  "MyEcsCluster989E66E0": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyEcsCluster/Resource"
   }
  },
  "MyEcsCluster9940BE40": {
   "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
   "Properties": {
    "CapacityProviders": [
     "FARGATE",
     "FARGATE_SPOT"
    ],
    "Cluster": {
     "Ref": "MyEcsCluster989E66E0"
    },
    "DefaultCapacityProviderStrategy": []
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyEcsCluster/MyEcsCluster"
   }
  },
  "MyFargateTaskDefinitionTaskRoleBA72C579": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyFargateTaskDefinition/TaskRole/Resource"
   }
  },
  "MyFargateTaskDefinition51AA81CC": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Cpu": 256,
      "Environment": [
       {
        "Name": "STAGE_NAME",
        "Value": "QA"
       },
       {
        "Name": "APIGATEWAY_ENDPOINT",
        "Value": {
         "Fn::Join": [
          "",
          [
           "https://",
           {
            "Ref": "InvokeBedrockA334D07D"
           },
           ".execute-api.us-east-1.",
           {
            "Ref": "AWS::URLSuffix"
           },
           "/",
           {
            "Ref": "InvokeBedrockDeploymentStageQAB0ECFE74"
           },
           "/"
          ]
         ]
        }
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Sub": "533267284022.dkr.ecr.us-east-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-533267284022-us-east-1:8c713a914859995714f2ad77c8cd54b7bc3c6f708f81c53c484d71bbd4f39bcb"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "MyFargateTaskDefinitionMyContainerLogGroupC45BD3D3"
        },
        "awslogs-stream-prefix": "WebContainerLogs",
        "awslogs-region": "us-east-1"
       }
      },
      "Memory": 512,
      "Name": "MyContainer",
      "PortMappings": [
       {
        "ContainerPort": 8501,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "MyFargateTaskDefinitionExecutionRole8702CEB0",
      "Arn"
     ]
    },
    "Family": "CodePipelineStackQAWebAppStackMyFargateTaskDefinitionC55BD4F2",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "MyFargateTaskDefinitionTaskRoleBA72C579",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyFargateTaskDefinition/Resource"
   }
  },
  "MyFargateTaskDefinitionMyContainerLogGroupC45BD3D3": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyFargateTaskDefinition/MyContainer/LogGroup/Resource"
   }
  },
  "MyFargateTaskDefinitionExecutionRole8702CEB0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyFargateTaskDefinition/ExecutionRole/Resource"
   }
  },
  "MyFargateTaskDefinitionExecutionRoleDefaultPolicy96A4F331": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:us-east-1:533267284022:repository/cdk-hnb659fds-container-assets-533267284022-us-east-1"
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyFargateTaskDefinitionMyContainerLogGroupC45BD3D3",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyFargateTaskDefinitionExecutionRoleDefaultPolicy96A4F331",
    "Roles": [
     {
      "Ref": "MyFargateTaskDefinitionExecutionRole8702CEB0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyFargateTaskDefinition/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "MainLambdaFunctionServiceRole7DF7C565": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MainLambdaFunction/ServiceRole/Resource"
   }
  },
  "MainLambdaFunctionServiceRoleDefaultPolicy518C3E49": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "bedrock:InvokeModel",
        "bedrock:InvokeModelWithResponseStream"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "bedrock:RetrieveAndGenerate",
        "bedrock:Retrieve"
       ],
       "Effect": "Allow",
       "Resource": "*",
       "Sid": "KnowledgebaseRetrieveAndGeneratePolicy"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MainLambdaFunctionServiceRoleDefaultPolicy518C3E49",
    "Roles": [
     {
      "Ref": "MainLambdaFunctionServiceRole7DF7C565"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MainLambdaFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "MainLambdaFunction236E947F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-533267284022-us-east-1",
     "S3Key": "96400fa9d14a06c6d281b5bfcda13974a623f7690e8feda8e88a40427e66cc19.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE_NAME": "QA",
      "KNOWLEDGE_BASE_ID": {
       "Fn::ImportValue": "QA-BedrockStack:ExportsOutputFnGetAttKnowledgeBaseMyCfnKnowledgeBaseB201D483KnowledgeBaseIdF3E87343"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "MainLambdaFunctionServiceRole7DF7C565",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 300
   },
   "DependsOn": [
    "MainLambdaFunctionServiceRoleDefaultPolicy518C3E49",
    "MainLambdaFunctionServiceRole7DF7C565"
   ],
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MainLambdaFunction/Resource",
    "aws:asset:path": "../asset.96400fa9d14a06c6d281b5bfcda13974a623f7690e8feda8e88a40427e66cc19",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "InvokeBedrockA334D07D": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "This service invokes the Bedrock Main Lambda function",
    "Name": "InvokeBedrock API"
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/InvokeBedrock/Resource"
   }
  },
  "InvokeBedrockCloudWatchRole360606C8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/InvokeBedrock/CloudWatchRole/Resource"
   }
  },
  "InvokeBedrockAccount462A0F40": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "InvokeBedrockCloudWatchRole360606C8",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "InvokeBedrockA334D07D"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/InvokeBedrock/Account"
   }
  },
  "InvokeBedrockDeployment4960FE506a1c518254a40c9566c0f54590379734": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "This service invokes the Bedrock Main Lambda function",
    "RestApiId": {
     "Ref": "InvokeBedrockA334D07D"
    }
   },
   "DependsOn": [
    "InvokeBedrockinvokePOST1562B488",
    "InvokeBedrockinvokeA012E6A9"
   ],
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/InvokeBedrock/Deployment/Resource"
   }
  },
  "InvokeBedrockDeploymentStageQAB0ECFE74": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "InvokeBedrockDeployment4960FE506a1c518254a40c9566c0f54590379734"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": true,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "InvokeBedrockA334D07D"
    },
    "StageName": "QA"
   },
   "DependsOn": [
    "InvokeBedrockAccount462A0F40"
   ],
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/InvokeBedrock/DeploymentStage.QA/Resource"
   }
  },
  "InvokeBedrockinvokeA012E6A9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "InvokeBedrockA334D07D",
      "RootResourceId"
     ]
    },
    "PathPart": "invoke",
    "RestApiId": {
     "Ref": "InvokeBedrockA334D07D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/InvokeBedrock/Default/invoke/Resource"
   }
  },
  "InvokeBedrockinvokePOSTApiPermissionCodePipelineStackQAWebAppStackInvokeBedrockE5D18D71POSTinvoke82FA82DB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MainLambdaFunction236E947F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:533267284022:",
       {
        "Ref": "InvokeBedrockA334D07D"
       },
       "/",
       {
        "Ref": "InvokeBedrockDeploymentStageQAB0ECFE74"
       },
       "/POST/invoke"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/InvokeBedrock/Default/invoke/POST/ApiPermission.CodePipelineStackQAWebAppStackInvokeBedrockE5D18D71.POST..invoke"
   }
  },
  "InvokeBedrockinvokePOSTApiPermissionTestCodePipelineStackQAWebAppStackInvokeBedrockE5D18D71POSTinvoke1D35BE5C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MainLambdaFunction236E947F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:533267284022:",
       {
        "Ref": "InvokeBedrockA334D07D"
       },
       "/test-invoke-stage/POST/invoke"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/InvokeBedrock/Default/invoke/POST/ApiPermission.Test.CodePipelineStackQAWebAppStackInvokeBedrockE5D18D71.POST..invoke"
   }
  },
  "InvokeBedrockinvokePOST1562B488": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MainLambdaFunction236E947F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "InvokeBedrockinvokeA012E6A9"
    },
    "RestApiId": {
     "Ref": "InvokeBedrockA334D07D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/InvokeBedrock/Default/invoke/POST/Resource"
   }
  },
  "MyFargateService8825BC17": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "MyEcsCluster989E66E0"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "MyContainer",
      "ContainerPort": 8501,
      "TargetGroupArn": {
       "Ref": "MyAlbHttpListenerFargateServiceTargetGroupCF27D20C"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "EcsSecurityGroup44008BF1",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
       },
       {
        "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "MyFargateTaskDefinition51AA81CC"
    }
   },
   "DependsOn": [
    "MyAlbHttpListenerFargateServiceTargetGroupCF27D20C",
    "MyAlbHttpListener75BB2BF3",
    "MyFargateTaskDefinitionTaskRoleBA72C579"
   ],
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyFargateService/Service"
   }
  },
  "MyAlbC124CC0D": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "AlbSecurityGroup86A59E99",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "MyVpcPublicSubnet1SubnetF6608456"
     },
     {
      "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "MyVpcPublicSubnet1DefaultRoute95FDF9EB",
    "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB",
    "MyVpcPublicSubnet2DefaultRoute052936F6",
    "MyVpcPublicSubnet2RouteTableAssociation227DE78D"
   ],
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyAlb/Resource"
   }
  },
  "MyAlbHttpListener75BB2BF3": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "MyAlbHttpListenerFargateServiceTargetGroupCF27D20C"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "MyAlbC124CC0D"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyAlb/HttpListener/Resource"
   }
  },
  "MyAlbHttpListenerFargateServiceTargetGroupCF27D20C": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 8501,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/MyAlb/HttpListener/FargateServiceTargetGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31S227bMAz9lr4rWpNsH5C4axGg64yk6GvAyIzLxJEMkUoQGP73QVIu7gbsiYeHFH0O6Yke//iuxw9w4pGp9qOGNrpbCZi9ghOvOzQT3X20RhVb+1EWqgybhswqbCxK5O5o6YLgO2wavPN3bsbsDIGQs7fmCH4uyhjeQF5A8ARnVXo6guB98MIKeou3hqzkks1EwHwe0IpaoQme5PziXWiThv8SC1t7ZO4VGtZd0QQW9LHrX1hAC4bkXHp3pAr9wAyrZ/A1RJe8f8ItWbp6/JtxVoAs+gF3ebtCfyST95ZhrwgOulu6vM0US9eQSfYzisr9GphRWD85s0e/OEAdV40Sa3qJrWMS589zYFSNq1l3r66+LeSKe9XAYVPB2roKd6zfUngO1iSZPL1+Js/mqZ4Hs0fJY9NT3RVbe3sRRaI/EDM52ytoqc730t0SWWYtJVt3ODPGBSvqCdvGndM9i60dZCuBOm8ogSWyC95gUnBNLjMz/oXy6apIZdQrbICFTOOg2kAD1pCtjxPdzdq2IZPO+eqgmqda/gG+5MM+YkF76bniQf0dfI1y2/Mg7fu73LTN6IdsHdt+B2mDDF30Kl5E7/jbcfKox1P9+LBjopEPVuiAepnjH10p3PDGAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "CodePipelineStack/QA/WebAppStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "InvokeBedrockEndpointA91608CC": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "InvokeBedrockA334D07D"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "InvokeBedrockDeploymentStageQAB0ECFE74"
      },
      "/"
     ]
    ]
   }
  },
  "ApiGatewayEndpoint": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "InvokeBedrockA334D07D"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "InvokeBedrockDeploymentStageQAB0ECFE74"
      },
      "/"
     ]
    ]
   }
  },
  "AlbDnsName": {
   "Value": {
    "Fn::GetAtt": [
     "MyAlbC124CC0D",
     "DNSName"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}